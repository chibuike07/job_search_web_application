{"version":3,"sources":["component/search.module.css","component/Yelp.js","component/custom_search.jsx","component/Found_view.jsx","component/location_options.jsx","component/Parent.component.js","serviceWorker.js","index.js","component/Found_view.module.css"],"names":["module","exports","yelp","searchYelp","term","location","sortBy","fetch","headers","Authorization","then","response","json","jsonResponse","businesses","map","business","id","imageSrc","image_url","name","address","address1","city","state","zipCode","zip_code","category","categories","title","country","rating","reviewCount","review_count","url","alias","Search","onChange","width","placeholder","height","textTransform","padding","margin","type","className","value","list","style","FoundView","foundSearch","view_wrapper","Styles","display_view","found_view","img_view","searchResult","length","i","key","src","alt","href","LocationOption","Alabarna","Alaska","Arizona","Arkanasas","California","Colorado","Florida","Georgia","Hawali","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michaigan","Minnesota","Missouri","Mississippi","Montana","Nebraska","Nevada","New_Hampshire","New_Mexico","New_York","North_Carolina","North_Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode_Island","South_Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West_Virginia","WisConsin","Wyoming","BusinessSearch","handleChange","handleSubmit","input_wrapper","form","inputLabel","btn","job_search","sort_by","LocationOptions","sortByOption","onSubmit","htmlFor","defaultValue","values","Parent","businessSearch","target","setState","e","a","async","preventDefault","result","Object","join","res","alert","handleLocationOptions","states","keys","this","React","Component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99daf9b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_wrapper\":\"search_input_wrapper__3jtoQ\",\"form\":\"search_form__2czHT\",\"inputLabel\":\"search_inputLabel__1IUbx\",\"btn\":\"search_btn__1AXQX\",\"splash\":\"search_splash__3NUni\"};","// import React from \"react\";\nconst apiKey =\n  \"4ddDU7Ljg3dMp4fRLARjCnkYcRbFbcnSnsgKpfZCr_PxuItcmFcV_pHlo6mIpbaKju8__LcwKmu7L7e0QVPDZR1Y2beCwB6n1RZhnZRqVbb5TubnD-KqHEJ-L3PsXHYx\";\n\nconst yelp = {\n  searchYelp(term, location, sortBy) {\n    return fetch(\n      `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\n      { headers: { Authorization: `Bearer ${apiKey}` } }\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(jsonResponse => {\n        if (jsonResponse.businesses) {\n          return jsonResponse.businesses.map(business => {\n            return {\n              id: business.id,\n              imageSrc: business.image_url,\n              name: business.name,\n              address: business.location.address1,\n              city: business.location.city,\n              state: business.location.state,\n              zipCode: business.location.zip_code,\n              category: business.categories[0].title,\n              country: business.location.country,\n              rating: business.rating,\n              reviewCount: business.review_count,\n              url: business.url,\n              alias: business.categories[0].alias\n            };\n          });\n        }\n      });\n  }\n};\n\nexport default yelp;\n","import React from \"react\";\n\nconst Search = ({\n  onChange,\n  width,\n  placeholder,\n  height,\n  textTransform,\n  padding,\n  margin,\n  type,\n  className,\n  value,\n  name,\n  list,\n  id\n}) => {\n  return (\n    <input\n      style={{\n        width: width ? width : \"200px\",\n        height: height ? height : \"5vh\",\n        textTransform: textTransform ? textTransform : \"uppercase\"\n      }}\n      type={type ? type : \"text\"}\n      value={value ? value : \"\"}\n      name={name ? name : null}\n      padding={padding ? padding : null}\n      id={id ? id : null}\n      list={list ? list : null}\n      onChange={onChange}\n      className={className ? className : null}\n      margin={margin ? margin : null}\n      placeholder={placeholder ? placeholder : null}\n    />\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport Styles from \"./Found_view.module.css\";\nconst FoundView = ({ foundSearch }) => {\n  const { view_wrapper, display_view, found_view, img_view } = Styles;\n  const searchResult = foundSearch.length ? (\n    foundSearch &&\n    foundSearch.map(({ address, imageSrc, url, city, category }, i) => (\n      <div key={i} className={found_view}>\n        <div className={img_view}>\n          <img\n            src={imageSrc}\n            alt={category}\n            style={{ width: \"250px\", height: \"250px\" }}\n          />\n        </div>\n        <address>{address}</address>\n        <cite>{city}</cite>\n        <br />\n        <a href={url}>view in page</a>\n      </div>\n    ))\n  ) : (\n    <div>{null}</div>\n  );\n\n  return (\n    <div className={view_wrapper}>\n      <div className={display_view}>{searchResult}</div>\n    </div>\n  );\n};\n\nexport default FoundView;\n","export const LocationOption = {\n  Alabarna: \"Al\",\n  Alaska: \"AK\",\n  Arizona: \"AZ\",\n  Arkanasas: \"AR\",\n  California: \"CA\",\n  Colorado: \"CO\",\n  Florida: \"FL\",\n  Georgia: \"GA\",\n  Hawali: \"HI\",\n  Idaho: \"ID\",\n  Illinois: \"IL\",\n  Indiana: \"IN\",\n  Iowa: \"IA\",\n  Kansas: \"KS\",\n  Kentucky: \"KY\",\n  Louisiana: \"LA\",\n  Maine: \"ME\",\n  Maryland: \"MD\",\n  Massachusetts: \"MA\",\n  Michaigan: \"MI\",\n  Minnesota: \"MN\",\n  Missouri: \"MO\",\n  Mississippi: \"MS\",\n  Montana: \"MT\",\n  Nebraska: \"NE\",\n  Nevada: \"NV\",\n  New_Hampshire: \"NH\",\n  New_Mexico: \"NM\",\n  New_York: \"NY\",\n  North_Carolina: \"NC\",\n  North_Dakota: \"ND\",\n  Ohio: \"OH\",\n  Oklahoma: \"OK\",\n  Oregon: \"OR\",\n  Pennsylvania: \"PA\",\n  Rhode_Island: \"RI\",\n  South_Dakota: \"SD\",\n  Tennessee: \"TN\",\n  Texas: \"TX\",\n  Utah: \"UT\",\n  Vermont: \"VT\",\n  Virginia: \"VA\",\n  Washington: \"WA\",\n  West_Virginia: \"WV\",\n  WisConsin: \"WT\",\n  Wyoming: \"WY\"\n};\n\nexport const sortBy = [\"best_match\", \"rating\", \"review_count\"];\n","import React from \"react\";\nimport yelp from \"./Yelp\";\nimport CustomInput from \"./custom_search\";\nimport Styles from \"./search.module.css\";\nimport FoundView from \"./Found_view\";\nimport { LocationOption, sortBy } from \"./location_options\";\n\nconst BusinessSearch = ({ handleChange, value, handleSubmit }) => {\n  const { input_wrapper, form, inputLabel, btn } = Styles;\n  const {\n    job_search,\n    location,\n    sort_by,\n    LocationOptions,\n    sortByOption\n  } = value;\n\n  return (\n    <div>\n      <div>\n        <div className={input_wrapper}>\n          <form onSubmit={handleSubmit} className={form}>\n            <div className={inputLabel}>\n              <label htmlFor=\"job_search\">what are you looking for</label>\n              <CustomInput\n                placeholder={\"job search\"}\n                name={\"job_search\"}\n                onChange={handleChange}\n                value={job_search}\n                id={\"job_search\"}\n                width={\"25vw\"}\n              />\n            </div>\n            <div className={inputLabel}>\n              <label htmlFor=\"locations\">\n                what location are you looking at\n              </label>\n              <CustomInput\n                placeholder={\"location\"}\n                name={\"location\"}\n                onChange={handleChange}\n                value={location}\n                list={\"location\"}\n                id={\"locations\"}\n                width={\"25vw\"}\n              />\n            </div>\n            <div className={inputLabel}>\n              <label htmlFor=\"sort\">search terms</label>\n              <CustomInput\n                onChange={handleChange}\n                defaultValue={\"best_match\"}\n                name={\"sort_by\"}\n                value={sort_by}\n                textTransform={\"lowerCase\"}\n                list={\"sortBy\"}\n                id={\"sort\"}\n                width={\"25vw\"}\n              />\n            </div>\n            <datalist id={\"location\"}>\n              <option value={LocationOption[0]} />\n              {LocationOption &&\n                LocationOptions.map((value, i) => (\n                  <option key={i} value={value} />\n                ))}\n            </datalist>\n            <datalist id={\"sortBy\"}>\n              {sortByOption &&\n                sortBy.map((values, i) => <option value={values} key={i} />)}\n            </datalist>\n            <div className={btn}>\n              <button>search</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n  // https://en.wikipedia.org/wiki/List_of_U.S._state_abbreviations\n};\n\nclass Parent extends React.Component {\n  state = {\n    job_search: \"\",\n    location: \"\",\n    sort_by: \"\",\n    LocationOptions: [],\n    sortByOption: sortBy,\n    businessSearch: []\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value });\n  };\n\n  handleSubmit = async e => {\n    const { location, sort_by, job_search } = this.state;\n    e.preventDefault();\n    if (location !== \"\" && sort_by !== \"\" && job_search !== \"\") {\n      let result = Object.values(LocationOption[location]).join(\"\");\n      let res = await yelp.searchYelp(job_search, result, sort_by);\n      this.setState({ businessSearch: res });\n    } else {\n      alert(\"sorry search not found\");\n    }\n  };\n\n  handleLocationOptions = () => {\n    let states = LocationOption && Object.keys(LocationOption);\n    this.setState({ LocationOptions: states });\n  };\n\n  componentDidMount() {\n    this.setState({ sort_by: \"best_match\" });\n    this.handleLocationOptions();\n  }\n  render() {\n    return (\n      <div>\n        <BusinessSearch\n          value={this.state}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n        />\n        <FoundView foundSearch={this.state.businessSearch} />\n      </div>\n    );\n  }\n}\nexport default Parent;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Parent from \"./component/Parent.component\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Parent />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view_wrapper\":\"Found_view_view_wrapper__ME0Qn\",\"display_view\":\"Found_view_display_view__1I6Jz\",\"found_view\":\"Found_view_found_view__6Tx0f\",\"img_view\":\"Found_view_img_view__380zN\"};"],"sourceRoot":""}